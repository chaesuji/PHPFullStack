function(함수)
1. 기본 함수
    function fnc_add($int_a, $int_b){ > 매개변수 생성
        $sum = $int_a + $int_b;
        return $sum;
    }

* $int_a, $int_b = 매개변수(=Parameter, 함수를 호출할 때 인수로 전달된 값을 함수 내부에서 사용할 수 있게 해주는 변수)

fnc_add 함수를 호출, 함수의 매개변수에 넣을 값 지정
$result_add = fnc_add(10, 2); 
echo $result_add; > 변수에 넣은 함수 호출을 echo로 출력하기

2. 가변 파라미터 함수
    function fnc_args_add(){
        $args = func_get_args();  > 가변 파라미터 습득(= 파라미터 값 받아오기용)
        $sum = 0;                 > 더하기 결과 저장 변수

        foreach ($args as $val) { > 루프 : 배열의 크기만큼 더하기 실행
            $sum += $val;
        }
        return $sum;
    }
    echo fnc_args_add(1,2,3,4);   > 함수의 매개변수에 값 지정

* func_get_args() : 파라미터 값을 배열형식으로 저장

3. 재귀함수 > 책 110p
    function rcc($param_a){ 
        if($param_a === 1){
            return 1;
        }
        return $param_a * rcc($param_a -1); 
    }

    echo "\n".rcc(3);
* 맨 처음 $param_a 값 : 3 / ($parma_a -1)의 값이 올라와서 rcc(3) > rcc(2) > rcc(1)
* return $param_a * rcc($param_a -1);  ==> $param_a(3) * rcc($param_a(3)-1)

4. PHP 상에서 미리 정의 된 함수 및 상수
 - 수학 함수 : min, max, floor, round, ceil, rand
    echo floor(4.9); > 4
    echo round(4.5); > 5
    echo ceil(4.1); > 5

    echo min(array(3,4,5,6,1,2)); > 1
    echo max(array(3,4,5,6,1,2)); > 6

 - 날짜 함수 : time, date
    echo time(); > 1680515581 
    echo date('Y-M-d H:i:s'); // Y = 2023 / H = 24시 기준
    echo date('y-m-d h:i:s'); // y = 23 / h = 12시 기준

    * tiem(=timestamp) : 1970년 1월 1일 0시 0분 0초부터 지금까지 지나온 초를 정수형대로 출력

 - 고정밀도 계산 함수
    echo 1000000000000000000000; > 1.OE+21

 - 난수 함수 : rand()
    echo rand(0,2); > 0부터 2까지 랜덤으로 출력

 - 운영체제, PHP 버전, GLOBALS 정보 상수 & 변수 & 함수
     * 상수 : 단순한 값을 위한 식별자, 변하지 않는 값 
    echo PHP_OS; > 현재 PC의 운영체제 상수
    echo PHP_VARSION; > 현재 설치된 PHP의 상수
    var_dump($GLOBALS); > 미리 정의된 상수를 저장하고 있는 배열
    var_dump(phpinfo()); > PHP 정보 제공 함수

 - difine() : (상수 이름, 상수 값), 정의 함수, 상수 이름은 꼭 모든 문자를 대문자로 작성
    define("INT_ONE", 1); > 상수 선언
    echo "\n".INT_ONE; > 상수 사용, 1 출력

variable (변수) : 변수 - 변하는 값
1. 지역변수 : 함수 내의 변수와 함수 영역 밖의 ^변수를 구분^
    function fnc_add_1(){
        $i = 0;
        echo $i."\n";
        $i++;
    }

    $i = 0;
    fnc_add_1();
    echo $i;
 = 함수 내의 변수와 함수 영역 밖의 ^변수는 이름만 같을 뿐 별개의 변수^ > 함수 영역 밖에 있는 변수 $i의 값만 출력함

2. 전역변수 : 함수 내에서 ^함수 영역 밖에 있는 변수^를 참조
    function fnc_add(){
            global $global_int_a; > 함수 내에서 global을 통해 전역변수 선언
            $global_int_a = $global_int_a + 10;
            return $global_int_a;
        }
    $global_int_a = 5; > php 파일(함수 영역 밖), 전역변수 초기화(값 대입)
    echo fnc_add();

    > 결과 : 15 ($global_int_a = $global_int_a + 10, $global_int_a = 5 / 10 + 5 = 15)

 3. 정적변수 : 함수를 호출 할 때마다 이전의 함수 호출 시 가지고 있었던 ^변수의 내용을 유지^하고 싶을 때 사용
    function fnc_add_1(){
            static $i = 1; > static을 통해 정적 변수 선언
            echo $i."\n";
            $i++;
        }
    
    > 결과 : 1 (정적변수 : 값이 변하지 않는 변수)

4. call by value : 함수에서 ^값을 복사^해서 전달하는 방식
    function fnc_val($int_a, $int_b){
        $int_a = 3;
        $int_b = 4;
    }
    $int_a = 1;
    $int_b = 2;

    fnc_val(5, 6);
    echo $int_a." ".$int_b;
    
    > 결과 : 1 2 (함수 영역 밖의 int_a, int_b의 값을 복사)
    * 값을 전달한 변수와는 별개의 변수가 됨, 매개변수를 변경해도 원래의 변수에는 영향을 미치지 않음

5. call by reference : 값 대신 위치(주소)값을 전달하는 방식
    function fnc_val_2(&$a, &$b){
        $a = 3;
        $b = 4;
    }
    $int_a = 1;
    $int_b = 2;

    fnc_val_2($int_a, $int_b);
    echo $int_a." ".$int_b;

    > 결과 : 3 4 (변수 $a와 $b가 있는 위치를 찾아 $a, $b의 값을 출력함)
    * & = &기호 뒤에 있는 변수의 위치를 찾음